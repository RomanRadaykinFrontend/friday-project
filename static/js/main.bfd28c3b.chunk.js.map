{"version":3,"sources":["Registration/registration.module.css","PasswordRecovery/LostPassword.module.css","EnterNewPassword/NewPassword.module.css","Nav/Nav.module.css","store and reducers/registration-reducer.ts","dal/api.ts","store and reducers/app-reducer.ts","store and reducers/login-reducer.ts","Login/Login.tsx","Error404/Error404.tsx","store and reducers/enter-new-password-reducer.ts","PasswordRecovery/PasswordRecovery.tsx","EnterNewPassword/EnterNewPassword.tsx","ShowAllComponents/ShowAllComponents.tsx","Nav/Nav.tsx","Profile/Profile.tsx","Registration/Registration.tsx","App.tsx","reportWebVitals.ts","store and reducers/profile-reducer.ts","store and reducers/password-recovery-reducer.ts","store and reducers/show-all-components-reducer.ts","store and reducers/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","instance","axios","create","baseURL","loginAPI","password","email","rememberMe","post","delete","registrationAPI","newPasswordAPI","resetPasswordToken","then","response","data","lostPasswordAPI","from","message","initialState","isFetchingAC","isFetching","type","payload","successLoginAC","isAuth","errorMessage","failedLoginAC","Login","dispatch","useDispatch","useSelector","state","login","fetch","app","formik","useFormik","initialValues","onSubmit","values","res","catch","e","error","console","log","to","style","color","handleSubmit","htmlFor","id","name","onChange","handleChange","value","disabled","Error404","redirect","setResponseError","responseError","changeRedirectStatus","redirectStatus","PasswordRecovery","enterNewPassword","useState","setEmail","className","s","main","currentTarget","placeholder","onClick","a","postEmailTC","EnterNewPassword","password1","setPassword1","password2","setPassword2","token","useParams","badPassword","setBadPassword","inputs","ShowAllComponents","Nav","nav","Profile","isRedirecting","isLoading","redirectAC","REDIRECT","errorAC","ERROR","loadingAC","loading","LOADING","Registration","registration","confirmPassword","err","validate","errors","test","length","h1","form","form_item","getFieldProps","touched","button","App","useEffect","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","profile","showAllComponents","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd28c3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"registration_h1__2_IDP\",\"form\":\"registration_form__2E4YO\",\"form_item\":\"registration_form_item__8LaB7\",\"button\":\"registration_button__3Fg4i\",\"error\":\"registration_error__2FeDq\",\"loading\":\"registration_loading__140-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LostPassword_main__3JiQG\",\"error\":\"LostPassword_error__1KQfn\",\"message\":\"LostPassword_message__3pxXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__uOk6G\",\"inputs\":\"NewPassword_inputs__2efoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__h0oaZ\"};","import {Dispatch} from \"react\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"./store\";\r\nimport {registrationAPI} from \"../dal/api\";\r\n\r\n//variables\r\nexport enum ACTIONS_TYPE {\r\n    REDIRECT = 'Registration/REDIRECT',\r\n    LOADING = 'Registration/LOADING',\r\n    ERROR = 'Registration/ERROR',\r\n}\r\n\r\n//typing\r\ntype redirectACType = ReturnType<typeof redirectAC>\r\ntype errorACType = ReturnType<typeof errorAC>\r\ntype loadingACType = ReturnType<typeof loadingAC>\r\ntype ActionType = redirectACType | errorACType | loadingACType\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, RootStateType, unknown, ActionType>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    isRedirecting: false,\r\n    isLoading: false,\r\n    error: null as string | null\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.REDIRECT:\r\n            return {...state, isRedirecting: action.payload.redirect}\r\n\r\n        case ACTIONS_TYPE.ERROR:\r\n            return {...state, error: action.payload.error}\r\n\r\n        case ACTIONS_TYPE.LOADING:\r\n            return {...state, isLoading: action.payload.loading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nconst redirectAC = (redirect: boolean) => ({\r\n    type: ACTIONS_TYPE.REDIRECT,\r\n    payload: {redirect}\r\n} as const)\r\n\r\nconst errorAC = (error: string | null) => ({\r\n    type: ACTIONS_TYPE.ERROR,\r\n    payload: {error}\r\n} as const)\r\n\r\nconst loadingAC = (loading: boolean) => ({\r\n    type: ACTIONS_TYPE.LOADING,\r\n    payload: {loading}\r\n} as const)\r\n\r\n\r\n//Thunk\r\nexport const registration = (email: string, password: string): ThunkType => async (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(loadingAC(true))\r\n    try {\r\n        await registrationAPI.registration(email, password)\r\n        dispatch(loadingAC(false))\r\n        dispatch(redirectAC(true))\r\n        dispatch(redirectAC(false))\r\n        dispatch(errorAC(null))\r\n    } catch (e) {\r\n        const err = e.response\r\n        dispatch(errorAC(err.data.error))\r\n        dispatch(loadingAC(false))\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport {LoginResponseType, LogoutResponseType} from \"../Common/Types\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n    //withCredentials: true\r\n})\r\n\r\n/*\"http://localhost:7542/2.0/\"*/\r\n\r\ntype ErrorType = {\r\n    email: string\r\n    error: string\r\n    in: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    login(password: string, email: string, rememberMe: boolean){\r\n        return instance.post<LoginResponseType>('auth/login', {password, email, rememberMe})\r\n    },\r\n    isAuth(){\r\n        return instance.post<LoginResponseType>('auth/me', {})\r\n    },\r\n    logOut(){\r\n        return instance.delete<LogoutResponseType>('auth/me', {})\r\n    }\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string) {\r\n        return instance.post<any | ErrorType>('/auth/register', {email, password})\r\n    }\r\n}\r\nexport const newPasswordAPI = {\r\n    postNewPassword(password:string,resetPasswordToken:string) {\r\n        return instance.post(`auth/set-new-password`, {password,resetPasswordToken}).then(response => response.data)\r\n    }\r\n}\r\nexport const lostPasswordAPI = {\r\n    postEmail(email: string) {\r\n        return instance.post(`auth/forgot`, {email, from: \"cards-admin <valdismin@gmail.com>\", message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='https://RomanRadaykinFrontend.github.io/friday-project/#/enter-new-password/$token$'>link</a></div>`}).then(response => response.data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type AppStateType = {\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState = {} as AppStateType\r\n\r\nexport const appReducer = (state: typeof initialState = initialState, action: ActionType): AppStateType => {\r\n    switch (action.type) {\r\n        case 'IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = ReturnType<typeof isFetchingAC>;\r\n\r\n//AC\r\nexport const isFetchingAC = (isFetching: boolean) => ({\r\n    type: 'IS-FETCHING',\r\n    payload: {isFetching}\r\n} as const)\r\n\r\n//THUNK\r\n","import {Dispatch} from \"redux\";\r\nimport {LoginPostType, LoginResponseType} from \"../Common/Types\";\r\nimport {loginAPI} from \"../dal/api\";\r\nimport { isFetchingAC } from \"./app-reducer\";\r\n\r\nexport type LoginStateType = {\r\n    isAuth: boolean\r\n    errorMessage: string\r\n    data: LoginResponseType\r\n}\r\n\r\nconst initialState = {} as LoginStateType\r\n\r\nexport const loginReducer = (state: typeof initialState = initialState, action: ActionType): LoginStateType => {\r\n    switch (action.type) {\r\n        case 'SUCCESS-LOGIN':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n                data: action.payload.data,\r\n                errorMessage: ''\r\n            }\r\n        case \"FAILED-LOGIN\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n                errorMessage: action.payload.errorMessage,\r\n            }\r\n        case 'SUCCESS-LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = ReturnType<typeof successLoginAC> | ReturnType<typeof failedLoginAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof successLogoutAC>\r\n\r\n//AC\r\nconst successLoginAC = (data: LoginResponseType, isAuth: boolean, errorMessage: string) => (\r\n    {\r\n        type: 'SUCCESS-LOGIN',\r\n        payload: {\r\n            data: {...data},\r\n            isAuth,\r\n            errorMessage\r\n        }\r\n    } as const\r\n)\r\n\r\nconst failedLoginAC = (errorMessage: string, isAuth: boolean) => (\r\n    {\r\n        type: 'FAILED-LOGIN',\r\n        payload: {\r\n            errorMessage,\r\n            isAuth\r\n        }\r\n    } as const\r\n)\r\n\r\nconst successLogoutAC = (isAuth: boolean) => (\r\n    {\r\n        type: 'SUCCESS-LOGOUT',\r\n        payload: {\r\n            isAuth\r\n        }\r\n    } as const\r\n)\r\n\r\n//THUNK\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    loginAPI.isAuth()\r\n        .then(res => {\r\n            debugger\r\n            dispatch(successLoginAC(res.data, true, ''))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n        })\r\n}\r\nexport const loginTC = (password: string, email: string, rememberMe: boolean) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    loginAPI.login(password, email, rememberMe)\r\n        .then(res => {\r\n            dispatch(successLoginAC(res.data, true, ''))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    loginAPI.logOut()\r\n        .then(res => {\r\n            dispatch(successLogoutAC(false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {LoginStateType, loginTC } from \"../store and reducers/login-reducer\";\r\nimport { RootStateType } from \"../store and reducers/store\";\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {isAuth,\r\n        errorMessage} = useSelector<RootStateType, LoginStateType>(state => state.login);\r\n    const fetch = useSelector<RootStateType, boolean>(state => state.app.isFetching);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values.password, values.email, values.rememberMe))\r\n        },\r\n    });\r\n\r\n    console.log(errorMessage)\r\n\r\n    if(isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        Login\r\n\r\n        {fetch && <div>Loading...</div>}\r\n        {errorMessage && <div style={{color: 'red'}}>{errorMessage}</div>}\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type={'text'} name={'password'} id={'password'}\r\n                   value={formik.values.password}\r\n                   onChange={formik.handleChange}/>\r\n            <label htmlFor=\"rememberMe\">Remember me</label>\r\n            <input type=\"checkbox\" name=\"rememberMe\"\r\n                   value=\"rememberMe\" onChange={formik.handleChange}/>\r\n            <button type=\"submit\" disabled={fetch}>Submit</button>\r\n        </form>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return <div>\r\n        Error404\r\n    </div>\r\n}\r\n\r\nexport default Error404\r\n","import {lostPasswordAPI, newPasswordAPI} from \"../dal/api\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    error: null,\r\n    redirect:false\r\n}\r\n\r\nexport type  initType = {\r\n    error: string | null,\r\n    redirect:boolean\r\n}\r\n\r\nexport const enterNewPasswordReducer = (state: initType = initialState, action: ActionType): initType => {\r\n    switch (action.type) {\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.responseError}\r\n        case \"CHANGE-REDIRECT\":\r\n            return {...state, redirect: action.redirectStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setResponseError = (responseError: string | null) => ({type: \"SET-ERROR\", responseError} as const)\r\nexport const changeRedirectStatus = (redirectStatus: boolean) => ({type: \"CHANGE-REDIRECT\", redirectStatus} as const)\r\n\r\ntype ActionType = ReturnType<typeof setResponseError> | ReturnType<typeof changeRedirectStatus>\r\n\r\n\r\n\r\nexport const postNewPasswordTC = (password:string,resetPasswordToken:string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await newPasswordAPI.postNewPassword(password,resetPasswordToken)\r\n            dispatch(changeRedirectStatus(true))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n\r\nexport const postEmailTC = (email: string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await lostPasswordAPI.postEmail(email)\r\n            dispatch(changeRedirectStatus(true))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./LostPassword.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./../store and reducers/store\";\r\nimport {postEmailTC, setResponseError} from \"./../store and reducers/enter-new-password-reducer\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const error = useSelector<RootStateType, string | null>(state => state.enterNewPassword.error)\r\n    const [email, setEmail] = useState(\"\")\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.enterNewPassword.redirect)\r\n    const dispatch = useDispatch()\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseError(null))\r\n    }\r\n\r\n    const postEmail = () => {\r\n        return dispatch(postEmailTC(email))\r\n    }\r\n\r\n\r\n    return <div>\r\n        {redirect ? <h3 className={s.message}>We have sent you a message with a link to change your password to this address:{email}</h3> :\r\n            <div className={s.main}>\r\n                <h1>Укажите email или телефон</h1>\r\n                <h3>Пожалуйста, укажите email или телефон, который вы использовали для входа на сайт</h3>\r\n                <input onChange={onInputChange} placeholder={\"Enter Email\"}/>\r\n                {error ? <div className={s.error}>{error}</div> : null}\r\n                <button onClick={postEmail}>Next</button>\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport s from './NewPassword.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./../store and reducers/store\";\r\nimport {postNewPasswordTC} from \"./../store and reducers/enter-new-password-reducer\";\r\n\r\n\r\nexport const EnterNewPassword = () => {\r\n\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n    const {token} = useParams<{ token: string }>()\r\n    const dispatch = useDispatch()\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.enterNewPassword.redirect)\r\n    const [badPassword, setBadPassword] = useState(false)\r\n    const error = useSelector<RootStateType, string | null>(state => state.enterNewPassword.error)\r\n\r\n    const changePassword1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n    const changePassword2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const changePassword = () => {\r\n        if (password1 === password2) {\r\n            return dispatch(postNewPasswordTC(password2, token))\r\n        } else {\r\n            return setBadPassword(true)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (redirect) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n\r\n    return <div className={s.main}>\r\n        <h1>Введите новый пароль</h1>\r\n        <div className={s.inputs}>\r\n            <input onChange={changePassword1} type=\"password\" placeholder={\"Enter new password\"}/>\r\n            <input onChange={changePassword2} type=\"password\" placeholder={\"Repeat new password\"}/>\r\n            {badPassword ? <div>Passwords mismatch!</div> : null}\r\n            {error ? <div className={s.error}>{error}</div> : null}\r\n        </div>\r\n        <button onClick={changePassword}>Next</button>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nconst ShowAllComponents = () => {\r\n    return <div>\r\n        ShowAllComponents\r\n    </div>\r\n}\r\n\r\nexport default ShowAllComponents\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from'./Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return <nav className={style.nav}>\r\n        <NavLink to={'/login'}>Login </NavLink>\r\n        <NavLink to={'/registration'}>Registration</NavLink>\r\n        <NavLink to={'/profile'}>Profile</NavLink>\r\n        <NavLink to={'/404'}>Error404</NavLink>\r\n        <NavLink to={'/password-recovery'}>Password recovery</NavLink>\r\n        <NavLink to={'/enter-new-password/:token'}>New password</NavLink>\r\n        <NavLink to={'/show-all'}>Show all</NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Nav\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../store and reducers/store\";\r\nimport {logoutTC} from \"../store and reducers/login-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth);\r\n    const fetch = useSelector<RootStateType, boolean>(state => state.app.isFetching);\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if(!isAuth){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <div>\r\n        Profile\r\n        <button onClick={logout}>logout</button>\r\n    </div>\r\n}\r\n\r\nexport default Profile\r\n","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./registration.module.css\"\r\nimport {RootStateType} from \"../store and reducers/store\";\r\nimport {registration} from \"../store and reducers/registration-reducer\";\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport const Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<RootStateType, string | null>(state => state.registration.error)\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.registration.isRedirecting)\r\n    const isLoading = useSelector<RootStateType, boolean>(state => state.registration.isLoading)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n\r\n        onSubmit: (values) => {\r\n            dispatch(registration(values.email, values.password))\r\n        },\r\n\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length <= 7) {\r\n                errors.password = 'Password should be more 7 symbols';\r\n            }\r\n\r\n            if(values.password !== values.confirmPassword && values.confirmPassword !== \"\") {\r\n                errors.password = 'Passwords do not match'\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    })\r\n\r\n    if (redirect) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registration}>\r\n\r\n            <h1 className={s.h1}>Форма регистрации</h1>\r\n\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <div className={s.form_item}>\r\n                    <input type=\"text\"\r\n                           placeholder=\"Введите логин\"\r\n                           {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ?\r\n                        <div className={s.error}>{formik.errors.email}</div> : null}\r\n                </div>\r\n\r\n                <div className={s.form_item}>\r\n                    <input type=\"password\"\r\n                           placeholder=\"Введите пароль\"\r\n                           {...formik.getFieldProps('password')}\r\n                    />\r\n\r\n                    {formik.touched.password && formik.errors.password ?\r\n                        <div className={s.error}>{formik.errors.password}</div> : null}\r\n                </div>\r\n\r\n                <div className={s.form_item}>\r\n                    <input type=\"password\"\r\n                           placeholder=\"Введите пароль еще раз\"\r\n                           {...formik.getFieldProps('confirmPassword')}\r\n                    />\r\n\r\n                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                        <div className={s.error}>{formik.errors.confirmPassword}</div> : null}\r\n                </div>\r\n\r\n                <button className={s.button} type='submit' disabled={isLoading}>Зарегистрироваться</button>\r\n            </form>\r\n\r\n            {error && !isLoading && <div className={s.error}>{error}</div>}\r\n            {isLoading && <div className={s.loading}>LOADING...</div>}\r\n        </div>\r\n\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from \"./Login/Login\";\r\nimport Error404 from \"./Error404/Error404\";\r\nimport {PasswordRecovery} from \"./PasswordRecovery/PasswordRecovery\";\r\nimport {EnterNewPassword} from \"./EnterNewPassword/EnterNewPassword\";\r\nimport ShowAllComponents from \"./ShowAllComponents/ShowAllComponents\";\r\nimport Nav from './Nav/Nav';\r\nimport Profile from './Profile/Profile';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./store and reducers/store\";\r\nimport { isAuthTC } from './store and reducers/login-reducer';\r\nimport {Registration} from \"./Registration/Registration\";\r\n\r\n\r\nfunction App() {\r\n\r\n       useEffect(() => {\r\n        dispatch(isAuthTC())\r\n    }, [])\r\n\r\n    const auth = useSelector<RootStateType, boolean>(state => state.login.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav/>\r\n        {/*{!auth && <Redirect to={'/login'}/>}*/}\r\n      <Route path={'/login'} render={()=><Login/>}/>\r\n      <Route path={'/registration'} render={()=><Registration/>}/>\r\n      <Route path={'/404'} render={()=><Error404/>}/>\r\n      <Route path={'/profile'} render={()=><Profile/>}/>\r\n      <Route path={'/password-recovery'} render={()=><PasswordRecovery/>}/>\r\n      <Route path={'/enter-new-password/:token'} render={()=><EnterNewPassword/>}/>\r\n      <Route path={'/show-all'} render={()=><ShowAllComponents/>}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type ProfileStateType = {\r\n}\r\n\r\nconst initialState = {} as ProfileStateType\r\n\r\nexport const profileReducer = (state: typeof initialState = initialState, action: ActionType): ProfileStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type PasswordRecoveryStateType = {\r\n}\r\n\r\nconst initialState = {} as PasswordRecoveryStateType\r\n\r\nexport const passwordRecoveryReducer = (state: typeof initialState = initialState, action: ActionType): PasswordRecoveryStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type ShowAllComponentsStateType = {\r\n}\r\n\r\nconst initialState = {} as ShowAllComponentsStateType\r\n\r\nexport const showAllComponentsReducer = (state: typeof initialState = initialState, action: ActionType): ShowAllComponentsStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n","import { createStore } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport { passwordRecoveryReducer } from \"./password-recovery-reducer\";\r\nimport {showAllComponentsReducer} from \"./show-all-components-reducer\";\r\nimport { enterNewPasswordReducer } from \"./enter-new-password-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    showAllComponents: showAllComponentsReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    enterNewPassword: enterNewPasswordReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type ReducersType = typeof reducers;\r\nexport type RootStateType = ReturnType<ReducersType>\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport {store} from \"./store and reducers/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}