{"version":3,"sources":["EnterNewPassword/NewPassword.module.css","PasswordRecovery/LostPassword.module.css","Nav/Nav.module.css","Login/login.module.css","Registration/registration.module.css","store and reducers/registration-reducer.ts","dal/api.ts","store and reducers/enter-new-password-reducer.ts","EnterNewPassword/EnterNewPassword.tsx","Error404/Error404.tsx","store and reducers/app-reducer.ts","store and reducers/login-reducer.ts","Login/Login.tsx","PasswordRecovery/PasswordRecovery.tsx","Profile/Profile.tsx","Registration/Registration.tsx","ShowAllComponents/ShowAllComponents.tsx","routes/Routes.tsx","Nav/Nav.tsx","App.tsx","reportWebVitals.ts","store and reducers/profile-reducer.ts","store and reducers/password-recovery-reducer.ts","store and reducers/show-all-components-reducer.ts","store and reducers/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","instance","axios","create","baseURL","withCredentials","loginAPI","password","email","rememberMe","post","delete","registrationAPI","newPasswordAPI","resetPasswordToken","then","response","data","lostPasswordAPI","from","message","initialState","error","redirect","setResponseError","responseError","type","changeRedirectStatus","redirectStatus","EnterNewPassword","useState","password1","setPassword1","password2","setPassword2","token","useParams","dispatch","useDispatch","useSelector","state","enterNewPassword","badPassword","setBadPassword","to","className","s","main","inputs","onChange","e","currentTarget","value","placeholder","onClick","a","Error404","isFetchingAC","isFetching","payload","successLoginAC","isAuth","errorMessage","failedLoginAC","Login","login","fetch","app","formik","useFormik","initialValues","onSubmit","values","res","catch","console","log","h1","form","handleSubmit","form_item","htmlFor","id","name","handleChange","m","form_item_rememberMe","button","disabled","loading","PasswordRecovery","setEmail","postEmailTC","Profile","isRedirecting","isLoading","redirectAC","REDIRECT","errorAC","ERROR","loadingAC","LOADING","Registration","registration","confirmPassword","err","validate","errors","test","length","getFieldProps","touched","ShowAllComponents","PATH","Routes","path","exact","render","Nav","style","nav","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","profile","showAllComponents","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7916561e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__1hsHa\",\"inputs\":\"NewPassword_inputs__3l3L0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LostPassword_main__2QggY\",\"error\":\"LostPassword_error__2Jhsm\",\"message\":\"LostPassword_message__2yYKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3f0C2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_item_rememberMe\":\"login_form_item_rememberMe__2LTFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"registration_h1__QViXp\",\"form\":\"registration_form__KcBZX\",\"form_item\":\"registration_form_item__136Oh\",\"button\":\"registration_button__13lpj\",\"error\":\"registration_error__2kWzP\",\"loading\":\"registration_loading__EvEU9\"};","import {Dispatch} from \"react\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"./store\";\r\nimport {registrationAPI} from \"../dal/api\";\r\n\r\n//variables\r\nexport enum ACTIONS_TYPE {\r\n    REDIRECT = 'Registration/REDIRECT',\r\n    LOADING = 'Registration/LOADING',\r\n    ERROR = 'Registration/ERROR',\r\n}\r\n\r\n//typing\r\ntype redirectACType = ReturnType<typeof redirectAC>\r\ntype errorACType = ReturnType<typeof errorAC>\r\ntype loadingACType = ReturnType<typeof loadingAC>\r\ntype ActionType = redirectACType | errorACType | loadingACType\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, RootStateType, unknown, ActionType>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    isRedirecting: false,\r\n    isLoading: false,\r\n    error: null as string | null\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.REDIRECT:\r\n            return {...state, isRedirecting: action.payload.redirect}\r\n\r\n        case ACTIONS_TYPE.ERROR:\r\n            return {...state, error: action.payload.error}\r\n\r\n        case ACTIONS_TYPE.LOADING:\r\n            return {...state, isLoading: action.payload.loading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action Creators\r\nconst redirectAC = (redirect: boolean) => ({\r\n    type: ACTIONS_TYPE.REDIRECT,\r\n    payload: {redirect}\r\n} as const)\r\n\r\nconst errorAC = (error: string | null) => ({\r\n    type: ACTIONS_TYPE.ERROR,\r\n    payload: {error}\r\n} as const)\r\n\r\nconst loadingAC = (loading: boolean) => ({\r\n    type: ACTIONS_TYPE.LOADING,\r\n    payload: {loading}\r\n} as const)\r\n\r\n\r\n//Thunk\r\nexport const registration = (email: string, password: string): ThunkType => async (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(loadingAC(true))\r\n    try {\r\n        await registrationAPI.registration(email, password)\r\n        dispatch(loadingAC(false))\r\n        dispatch(redirectAC(true))\r\n        dispatch(redirectAC(false))\r\n        dispatch(errorAC(null))\r\n    } catch (e) {\r\n        const err = e.response\r\n        dispatch(errorAC(err.data.error))\r\n        dispatch(loadingAC(false))\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport {LoginResponseType, LogoutResponseType} from \"../Common/Types\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n/*\"http://localhost:7542/2.0/\"*/\r\n\r\ntype ErrorType = {\r\n    email: string\r\n    error: string\r\n    in: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    login(password: string, email: string, rememberMe: boolean){\r\n        return instance.post<LoginResponseType>('auth/login', {password, email, rememberMe})\r\n    },\r\n    isAuth(){\r\n        return instance.post<LoginResponseType>('auth/me', {})\r\n    },\r\n    logOut(){\r\n        return instance.delete<LogoutResponseType>('auth/me', {})\r\n    }\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string) {\r\n        return instance.post<any | ErrorType>('/auth/register', {email, password})\r\n    }\r\n}\r\nexport const newPasswordAPI = {\r\n    postNewPassword(password:string,resetPasswordToken:string) {\r\n        return instance.post(`auth/set-new-password`, {password,resetPasswordToken}).then(response => response.data)\r\n    }\r\n}\r\nexport const lostPasswordAPI = {\r\n    postEmail(email: string) {\r\n        return instance.post(`auth/forgot`, {email, from: \"cards-admin <valdismin@gmail.com>\", message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='https://RomanRadaykinFrontend.github.io/friday-project/#/enter-new-password/$token$'>link</a></div>`}).then(response => response.data)\r\n    }\r\n}","import {lostPasswordAPI, newPasswordAPI} from \"../dal/api\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    error: null,\r\n    redirect:false\r\n}\r\n\r\nexport type  initType = {\r\n    error: string | null,\r\n    redirect:boolean\r\n}\r\n\r\nexport const enterNewPasswordReducer = (state: initType = initialState, action: ActionType): initType => {\r\n    switch (action.type) {\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.responseError}\r\n        case \"CHANGE-REDIRECT\":\r\n            return {...state, redirect: action.redirectStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setResponseError = (responseError: string | null) => ({type: \"SET-ERROR\", responseError} as const)\r\nexport const changeRedirectStatus = (redirectStatus: boolean) => ({type: \"CHANGE-REDIRECT\", redirectStatus} as const)\r\n\r\ntype ActionType = ReturnType<typeof setResponseError> | ReturnType<typeof changeRedirectStatus>\r\n\r\n\r\n\r\nexport const postNewPasswordTC = (password:string,resetPasswordToken:string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await newPasswordAPI.postNewPassword(password,resetPasswordToken)\r\n            dispatch(changeRedirectStatus(true))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n\r\nexport const postEmailTC = (email: string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            await lostPasswordAPI.postEmail(email)\r\n            dispatch(changeRedirectStatus(true))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\r\n            dispatch(setResponseError(error))\r\n        }\r\n    }\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport s from './NewPassword.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./../store and reducers/store\";\r\nimport {postNewPasswordTC} from \"./../store and reducers/enter-new-password-reducer\";\r\n\r\n\r\nexport const EnterNewPassword = () => {\r\n\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n    const {token} = useParams<{ token: string }>()\r\n    const dispatch = useDispatch()\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.enterNewPassword.redirect)\r\n    const [badPassword, setBadPassword] = useState(false)\r\n    const error = useSelector<RootStateType, string | null>(state => state.enterNewPassword.error)\r\n\r\n    const changePassword1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n    const changePassword2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const changePassword = () => {\r\n        if (password1 === password2) {\r\n            return dispatch(postNewPasswordTC(password2, token))\r\n        } else {\r\n            return setBadPassword(true)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (redirect) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n\r\n    return <div className={s.main}>\r\n        <h1>Введите новый пароль</h1>\r\n        <div className={s.inputs}>\r\n            <input onChange={changePassword1} type=\"password\" placeholder={\"Enter new password\"}/>\r\n            <input onChange={changePassword2} type=\"password\" placeholder={\"Repeat new password\"}/>\r\n            {badPassword ? <div>Passwords mismatch!</div> : null}\r\n            {error ? <div className={s.error}>{error}</div> : null}\r\n        </div>\r\n        <button onClick={changePassword}>Next</button>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return <div>\r\n        Error404\r\n    </div>\r\n}\r\n\r\nexport default Error404\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type AppStateType = {\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState = {} as AppStateType\r\n\r\nexport const appReducer = (state: typeof initialState = initialState, action: ActionType): AppStateType => {\r\n    switch (action.type) {\r\n        case 'IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = ReturnType<typeof isFetchingAC>;\r\n\r\n//AC\r\nexport const isFetchingAC = (isFetching: boolean) => ({\r\n    type: 'IS-FETCHING',\r\n    payload: {isFetching}\r\n} as const)\r\n\r\n//THUNK\r\n","import {Dispatch} from \"redux\";\r\nimport {LoginPostType, LoginResponseType} from \"../Common/Types\";\r\nimport {loginAPI} from \"../dal/api\";\r\nimport { isFetchingAC } from \"./app-reducer\";\r\n\r\nexport type LoginStateType = {\r\n    isAuth: boolean\r\n    errorMessage: string\r\n    data: LoginResponseType\r\n}\r\n\r\nconst initialState = {} as LoginStateType\r\n\r\nexport const loginReducer = (state: typeof initialState = initialState, action: ActionType): LoginStateType => {\r\n    switch (action.type) {\r\n        case 'SUCCESS-LOGIN':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n                data: action.payload.data,\r\n                errorMessage: ''\r\n            }\r\n        case \"FAILED-LOGIN\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n                errorMessage: action.payload.errorMessage,\r\n            }\r\n        case 'SUCCESS-LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = ReturnType<typeof successLoginAC> | ReturnType<typeof failedLoginAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof successLogoutAC>\r\n\r\n//AC\r\nconst successLoginAC = (data: LoginResponseType, isAuth: boolean, errorMessage: string) => (\r\n    {\r\n        type: 'SUCCESS-LOGIN',\r\n        payload: {\r\n            data: {...data},\r\n            isAuth,\r\n            errorMessage\r\n        }\r\n    } as const\r\n)\r\n\r\nconst failedLoginAC = (errorMessage: string, isAuth: boolean) => (\r\n    {\r\n        type: 'FAILED-LOGIN',\r\n        payload: {\r\n            errorMessage,\r\n            isAuth\r\n        }\r\n    } as const\r\n)\r\n\r\nconst successLogoutAC = (isAuth: boolean) => (\r\n    {\r\n        type: 'SUCCESS-LOGOUT',\r\n        payload: {\r\n            isAuth\r\n        }\r\n    } as const\r\n)\r\n\r\n//THUNK\r\n\r\nexport const isAuthTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    loginAPI.isAuth()\r\n        .then(res => {\r\n            debugger\r\n            dispatch(successLoginAC(res.data, true, ''))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n        })\r\n}\r\nexport const loginTC = (password: string, email: string, rememberMe: boolean) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    loginAPI.login(password, email, rememberMe)\r\n        .then(res => {\r\n            dispatch(successLoginAC(res.data, true, ''))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    loginAPI.logOut()\r\n        .then(res => {\r\n            dispatch(successLogoutAC(false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(failedLoginAC(error, false))\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginStateType, loginTC} from \"../store and reducers/login-reducer\";\r\nimport {RootStateType} from \"../store and reducers/store\";\r\nimport s from \"../Registration/registration.module.css\";\r\nimport m from './login.module.css'\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isAuth,\r\n        errorMessage\r\n    } = useSelector<RootStateType, LoginStateType>(state => state.login);\r\n    const fetch = useSelector<RootStateType, boolean>(state => state.app.isFetching);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values.password, values.email, values.rememberMe))\r\n        },\r\n    });\r\n\r\n    console.log(errorMessage)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 className={s.h1}>Login</h1>\r\n\r\n        <form className={s.form} onSubmit={formik.handleSubmit}>\r\n            <div className={s.form_item}>\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n\r\n            </div>\r\n\r\n            <div className={s.form_item}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type={'text'} name={'password'} id={'password'}\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}/>\r\n            </div>\r\n\r\n            <div className={`${s.form_item} ${m.form_item_rememberMe}`}>\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n                <input type=\"checkbox\" name=\"rememberMe\"\r\n                       value=\"rememberMe\" onChange={formik.handleChange}/>\r\n            </div>\r\n\r\n            <button className={s.button} type=\"submit\" disabled={fetch}>Submit</button>\r\n        </form>\r\n\r\n        {fetch && <div className={s.loading}>Loading...</div>}\r\n        {errorMessage && <div className={s.error}>{errorMessage}</div>}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Login\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./LostPassword.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./../store and reducers/store\";\r\nimport {postEmailTC, setResponseError} from \"./../store and reducers/enter-new-password-reducer\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const error = useSelector<RootStateType, string | null>(state => state.enterNewPassword.error)\r\n    const [email, setEmail] = useState(\"\")\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.enterNewPassword.redirect)\r\n    const dispatch = useDispatch()\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setResponseError(null))\r\n    }\r\n\r\n    const postEmail = () => {\r\n        return dispatch(postEmailTC(email))\r\n    }\r\n\r\n\r\n    return <div>\r\n        {redirect ? <h3 className={s.message}>We have sent you a message with a link to change your password to this address:{email}</h3> :\r\n            <div className={s.main}>\r\n                <h1>Укажите email или телефон</h1>\r\n                <h3>Пожалуйста, укажите email или телефон, который вы использовали для входа на сайт</h3>\r\n                <input onChange={onInputChange} placeholder={\"Enter Email\"}/>\r\n                {error ? <div className={s.error}>{error}</div> : null}\r\n                <button onClick={postEmail}>Next</button>\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../store and reducers/store\";\r\nimport {logoutTC} from \"../store and reducers/login-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth);\r\n    const fetch = useSelector<RootStateType, boolean>(state => state.app.isFetching);\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if(!isAuth){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <div>\r\n        Profile\r\n        <button onClick={logout}>logout</button>\r\n    </div>\r\n}\r\n\r\nexport default Profile\r\n","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./registration.module.css\"\r\nimport {RootStateType} from \"../store and reducers/store\";\r\nimport {registration} from \"../store and reducers/registration-reducer\";\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport const Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<RootStateType, string | null>(state => state.registration.error)\r\n    const redirect = useSelector<RootStateType, boolean>(state => state.registration.isRedirecting)\r\n    const isLoading = useSelector<RootStateType, boolean>(state => state.registration.isLoading)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n\r\n        onSubmit: (values) => {\r\n            dispatch(registration(values.email, values.password))\r\n        },\r\n\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length <= 7) {\r\n                errors.password = 'Password should be more 7 symbols';\r\n            }\r\n\r\n            if (values.password !== values.confirmPassword && values.confirmPassword !== \"\") {\r\n                errors.password = 'Passwords do not match'\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    })\r\n\r\n    if (redirect) {\r\n        return <Redirect to={'login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registration}>\r\n\r\n            <h1 className={s.h1}>Форма регистрации</h1>\r\n\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <div className={s.form_item}>\r\n                    <input type=\"text\"\r\n                           placeholder=\"Введите логин\"\r\n                           {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ?\r\n                        <div className={s.error}>{formik.errors.email}</div> : null}\r\n                </div>\r\n\r\n                <div className={s.form_item}>\r\n                    <input type=\"password\"\r\n                           placeholder=\"Введите пароль\"\r\n                           {...formik.getFieldProps('password')}\r\n                    />\r\n\r\n                    {formik.touched.password && formik.errors.password ?\r\n                        <div className={s.error}>{formik.errors.password}</div> : null}\r\n                </div>\r\n\r\n                <div className={s.form_item}>\r\n                    <input type=\"password\"\r\n                           placeholder=\"Введите пароль еще раз\"\r\n                           {...formik.getFieldProps('confirmPassword')}\r\n                    />\r\n\r\n                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                        <div className={s.error}>{formik.errors.confirmPassword}</div> : null}\r\n                </div>\r\n\r\n                <button className={s.button} type='submit' disabled={isLoading}>Зарегистрироваться</button>\r\n            </form>\r\n\r\n            {error && !isLoading && <div className={s.error}>{error}</div>}\r\n            {isLoading && <div className={s.loading}>LOADING...</div>}\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\n\r\nconst ShowAllComponents = () => {\r\n    return <div>\r\n        ShowAllComponents\r\n    </div>\r\n}\r\n\r\nexport default ShowAllComponents\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { EnterNewPassword } from \"../EnterNewPassword/EnterNewPassword\";\r\nimport Error404 from \"../Error404/Error404\";\r\nimport Login from \"../Login/Login\";\r\nimport { PasswordRecovery } from \"../PasswordRecovery/PasswordRecovery\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport ShowAllComponents from \"../ShowAllComponents/ShowAllComponents\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/registration\",\r\n    PROFILE: \"/profile\",\r\n    NEW_PASS : \"/enter-new-password/:token\",\r\n    RESET_PASS: \"/password-recovery\",\r\n    TEST: \"/show-all\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <EnterNewPassword/>}/>\r\n                <Route path={PATH.RESET_PASS} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.TEST} render={() => <ShowAllComponents/>}/>\r\n\r\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from'./Nav.module.css'\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nconst Nav = () => {\r\n    return <nav className={style.nav}>\r\n        <NavLink to={PATH.LOGIN}>Login </NavLink>\r\n        <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\r\n        <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n        <NavLink to={PATH.RESET_PASS}>Password recovery</NavLink>\r\n        <NavLink to={PATH.NEW_PASS}>New password</NavLink>\r\n        <NavLink to={PATH.TEST}>Show all</NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Nav\r\n","import React, { useEffect } from 'react';\r\nimport {HashRouter, Redirect, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Nav from './Nav/Nav';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./store and reducers/store\";\r\nimport { isAuthTC } from './store and reducers/login-reducer';\r\nimport {Routes} from \"./routes/Routes\";\r\n\r\n\r\nfunction App() {\r\n\r\n       useEffect(() => {\r\n        dispatch(isAuthTC())\r\n    }, [])\r\n\r\n    //const auth = useSelector<RootStateType, boolean>(state => state.login.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n      <HashRouter>\r\n          <Nav/>\r\n          <Routes/>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type ProfileStateType = {\r\n}\r\n\r\nconst initialState = {} as ProfileStateType\r\n\r\nexport const profileReducer = (state: typeof initialState = initialState, action: ActionType): ProfileStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type PasswordRecoveryStateType = {\r\n}\r\n\r\nconst initialState = {} as PasswordRecoveryStateType\r\n\r\nexport const passwordRecoveryReducer = (state: typeof initialState = initialState, action: ActionType): PasswordRecoveryStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n","import {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../dal/api\";\r\n\r\nexport type ShowAllComponentsStateType = {\r\n}\r\n\r\nconst initialState = {} as ShowAllComponentsStateType\r\n\r\nexport const showAllComponentsReducer = (state: typeof initialState = initialState, action: ActionType): ShowAllComponentsStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//TYPES\r\ntype ActionType = any;\r\n\r\n//AC\r\n\r\n//THUNK\r\n","import { createStore } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport { passwordRecoveryReducer } from \"./password-recovery-reducer\";\r\nimport {showAllComponentsReducer} from \"./show-all-components-reducer\";\r\nimport { enterNewPasswordReducer } from \"./enter-new-password-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    showAllComponents: showAllComponentsReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    enterNewPassword: enterNewPasswordReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type ReducersType = typeof reducers;\r\nexport type RootStateType = ReturnType<ReducersType>\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport {store} from \"./store and reducers/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}